% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PicoP2PFutureBackend-class.R
\name{pico_p2p}
\alias{pico_p2p}
\alias{availablePicoP2PWorkers}
\title{pico_p2p futures}
\usage{
pico_p2p(cluster = p2p_cluster(), name = p2p_name(), ...)

availablePicoP2PWorkers()
}
\arguments{
\item{cluster}{The p2p cluster to connect to.}

\item{name}{The name of the client as publicized on the P2P cluster.}

\item{\ldots}{Not used.}
}
\value{
An object of class \code{PicoP2PFuture}.

\code{availablePicoP2PWorkers()} returns the number of registered workers on the P2P cluster.
It will always return at least one worker, which is yourself.
\emph{WARNING: This is currently hardcoded to 10 workers, regardless of the number.}
}
\description{
\emph{WARNING: This function must never be called.
It may only be used with \code{\link[future:plan]{future::plan()}}}
}
\details{
A 'pico_p2p' future is an asynchronous multiprocess
future that will be evaluated in a background R session.

The Pico P2P future backend relies on Pico (1) to
distribute futures among a peer-to-peer (P2P) cluster of R workers.
Users with a Pico account can join the P2P cluster by
being invited to a shared folder.

Users who wish to contribute their compute power to the P2P cluster
should call \code{\link[=pico_p2p_worker]{pico_p2p_worker()}}.

Users who wish to take advantage of the compute power of the
P2P cluster should use \code{plan(pico_p2p)}.
}
\examples{
\dontshow{if (interactive()) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
## Futures are pushed to the Pico P2P cluster and 
## results are collected from there
plan(future.p2p::pico_p2p, .init = FALSE)

## Create future
a <- 42
f <- future({ 2 * a })

## Get results
v <- value(f)
print(v)
\dontshow{\}) # examplesIf}
}
\references{
\enumerate{
\item pico.sh, The ultimate ssh powered services for developers,
\url{https://pico.sh/}.
}
}
